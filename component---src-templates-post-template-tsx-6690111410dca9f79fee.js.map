{"version":3,"file":"component---src-templates-post-template-tsx-6690111410dca9f79fee.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/deep-copy-ts/dist/cloneArrayBuffer.js","webpack://gatsby-starter-default/./node_modules/deep-copy-ts/dist/cloneDataView.js","webpack://gatsby-starter-default/./node_modules/deep-copy-ts/dist/cloneDate.js","webpack://gatsby-starter-default/./node_modules/deep-copy-ts/dist/cloneMap.js","webpack://gatsby-starter-default/./node_modules/deep-copy-ts/dist/cloneRegexp.js","webpack://gatsby-starter-default/./node_modules/deep-copy-ts/dist/cloneTypedArray.js","webpack://gatsby-starter-default/./node_modules/deep-copy-ts/dist/deepCopy.js","webpack://gatsby-starter-default/./node_modules/deep-copy-ts/dist/index.js","webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/components/Post/RightSide.tsx","webpack://gatsby-starter-default/./src/components/Post/LeftSideItem.tsx","webpack://gatsby-starter-default/./src/components/Post/LeftSideFolder.tsx","webpack://gatsby-starter-default/./src/components/Post/LeftSide.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloneArrayBuffer = void 0;\n/**\r\n * Creates a clone of `arrayBuffer`.\r\n *\r\n * @private\r\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\r\n * @returns {ArrayBuffer} Returns the cloned array buffer.\r\n */\n\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new ArrayBuffer(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexports.cloneArrayBuffer = cloneArrayBuffer;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloneDataView = void 0;\n\nvar cloneArrayBuffer_1 = require(\"./cloneArrayBuffer\");\n/**\r\n * Creates a clone of `dataView`.\r\n *\r\n * @private\r\n * @param {Object} dataView The data view to clone.\r\n * @returns {Object} Returns the cloned data view.\r\n */\n\n\nfunction cloneDataView(dataView) {\n  var buffer = (0, cloneArrayBuffer_1.cloneArrayBuffer)(dataView.buffer);\n  return new DataView(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexports.cloneDataView = cloneDataView;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloneDate = void 0;\n/**\r\n * Creates a clone of `date`.\r\n *\r\n * @private\r\n * @param {Date} typedDate The date to clone.\r\n * @returns {Object} Returns the cloned date.\r\n */\n\nfunction cloneDate(targetDate) {\n  return new Date(targetDate.getTime());\n}\n\nexports.cloneDate = cloneDate;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloneMap = void 0;\n\nvar deepCopy_1 = require(\"./deepCopy\");\n/**\r\n * Creates a clone of `map`.\r\n *\r\n * @private\r\n * @param {Date} typedDate The map to clone.\r\n * @returns {Object} Returns the cloned map.\r\n */\n\n\nfunction cloneMap(targetMap) {\n  var map = new Map();\n  targetMap.forEach(function (value, key) {\n    return map.set((0, deepCopy_1.deepCopy)(key), (0, deepCopy_1.deepCopy)(value));\n  });\n  return map;\n}\n\nexports.cloneMap = cloneMap;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloneRegExp = void 0;\n/**\r\n * Creates a clone of `regexp`.\r\n *\r\n * @private\r\n * @param {Object} targetRegexp The regexp to clone.\r\n * @returns {Object} Returns the cloned regexp.\r\n */\n\nfunction cloneRegExp(targetRegexp) {\n  var result = new RegExp(targetRegexp.source, targetRegexp.flags);\n  result.lastIndex = targetRegexp.lastIndex;\n  return result;\n}\n\nexports.cloneRegExp = cloneRegExp;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloneTypedArray = void 0;\n\nvar cloneArrayBuffer_1 = require(\"./cloneArrayBuffer\");\n\nvar TypedArrayMap = {\n  \"[object Float32Array]\": Float32Array,\n  \"[object Float64Array]\": Float64Array,\n  \"[object Int8Array]\": Int8Array,\n  \"[object Int16Array]\": Int16Array,\n  \"[object Int32Array]\": Int32Array,\n  \"[object Uint8Array]\": Uint8Array,\n  \"[object Uint16Array]\": Uint16Array,\n  \"[object Uint32Array]\": Uint32Array,\n  \"[object Uint8ClampedArray]\": Uint8ClampedArray\n};\n/**\r\n * Creates a clone of `typedArray`.\r\n *\r\n * @private\r\n * @param {Object} typedArray The typed array to clone.\r\n * @returns {Object} Returns the cloned typed array.\r\n */\n\nfunction cloneTypedArray(typedArray) {\n  try {\n    TypedArrayMap[\"[object BigInt64Array]\"] = BigInt64Array;\n    TypedArrayMap[\"[object BigUint64Array]\"] = BigUint64Array;\n  } catch (e) {}\n\n  var buffer = (0, cloneArrayBuffer_1.cloneArrayBuffer)(typedArray.buffer);\n  return new TypedArrayMap[Object.prototype.toString.call(typedArray)](buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexports.cloneTypedArray = cloneTypedArray;","\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deepCopy = void 0;\n\nvar cloneArrayBuffer_1 = require(\"./cloneArrayBuffer\");\n\nvar cloneDataView_1 = require(\"./cloneDataView\");\n\nvar cloneDate_1 = require(\"./cloneDate\");\n\nvar cloneMap_1 = require(\"./cloneMap\");\n\nvar cloneRegexp_1 = require(\"./cloneRegexp\");\n\nvar cloneTypedArray_1 = require(\"./cloneTypedArray\");\n\nvar TypedArrayMap = {\n  \"[object Date]\": cloneDate_1.cloneDate,\n  \"[object ArrayBuffer]\": cloneArrayBuffer_1.cloneArrayBuffer,\n  \"[object DataView]\": cloneDataView_1.cloneDataView,\n  \"[object Float32Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Float64Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Int8Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Int16Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Int32Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Uint8Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Uint8ClampedArray]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Uint16Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Uint32Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object BigInt64Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object BigUint64Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object RegExp]\": cloneRegexp_1.cloneRegExp,\n  \"[object Map]\": cloneMap_1.cloneMap\n};\n/**\r\n * Deep copy function for TypeScript.\r\n * @param T Generic type of target/copied value.\r\n * @param target Target value to be copied.\r\n * @see Original source: ts-deepcopy https://github.com/ykdr2017/ts-deepcopy\r\n * @see Code pen https://codepen.io/erikvullings/pen/ejyBYg\r\n */\n\nfunction deepCopy(target) {\n  var tag = Object.prototype.toString.call(target);\n\n  if (TypedArrayMap[tag]) {\n    return TypedArrayMap[tag](target);\n  }\n\n  if (target === null) {\n    return target;\n  }\n\n  if (target instanceof Array) {\n    var cp_1 = [];\n    target.forEach(function (v) {\n      cp_1.push(v);\n    });\n    return cp_1.map(function (n) {\n      return deepCopy(n);\n    });\n  }\n\n  if (typeof target === \"object\") {\n    var cp_2 = __assign({}, target);\n\n    Object.keys(cp_2).forEach(function (k) {\n      cp_2[k] = deepCopy(cp_2[k]);\n    });\n    return cp_2;\n  }\n\n  return target;\n}\n\nexports.deepCopy = deepCopy;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deepCopy = exports.cloneTypedArray = exports.cloneRegExp = exports.cloneDate = exports.cloneDataView = exports.cloneArrayBuffer = void 0;\n\nvar cloneArrayBuffer_1 = require(\"./cloneArrayBuffer\");\n\nObject.defineProperty(exports, \"cloneArrayBuffer\", {\n  enumerable: true,\n  get: function get() {\n    return cloneArrayBuffer_1.cloneArrayBuffer;\n  }\n});\n\nvar cloneDataView_1 = require(\"./cloneDataView\");\n\nObject.defineProperty(exports, \"cloneDataView\", {\n  enumerable: true,\n  get: function get() {\n    return cloneDataView_1.cloneDataView;\n  }\n});\n\nvar cloneDate_1 = require(\"./cloneDate\");\n\nObject.defineProperty(exports, \"cloneDate\", {\n  enumerable: true,\n  get: function get() {\n    return cloneDate_1.cloneDate;\n  }\n});\n\nvar cloneRegexp_1 = require(\"./cloneRegexp\");\n\nObject.defineProperty(exports, \"cloneRegExp\", {\n  enumerable: true,\n  get: function get() {\n    return cloneRegexp_1.cloneRegExp;\n  }\n});\n\nvar cloneTypedArray_1 = require(\"./cloneTypedArray\");\n\nObject.defineProperty(exports, \"cloneTypedArray\", {\n  enumerable: true,\n  get: function get() {\n    return cloneTypedArray_1.cloneTypedArray;\n  }\n});\n\nvar deepCopy_1 = require(\"./deepCopy\");\n\nObject.defineProperty(exports, \"deepCopy\", {\n  enumerable: true,\n  get: function get() {\n    return deepCopy_1.deepCopy;\n  }\n});","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nexport type PostHeadInfoProps = {\r\n  title: string\r\n  date: string\r\n  categories: string[]\r\n}\r\n\r\nconst PostHeadInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 768px;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  padding: 30px 10px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    padding: 40px 20px;\r\n  }\r\n`\r\n\r\nconst Title = styled.div`\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  overflow-wrap: break-word;\r\n  margin-top: auto;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  font-size: 45px;\r\n  font-weight: 800;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 30px;\r\n  }\r\n`\r\n\r\nconst PostData = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n  }\r\n`\r\n\r\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\r\n  title,\r\n  date,\r\n  categories,\r\n}) {\r\n  return (\r\n    <PostHeadInfoWrapper>\r\n      <Title>{title}</Title>\r\n      <PostData>\r\n        <div>{categories.join(' / ')}</div>\r\n        <div>{date}</div>\r\n      </PostData>\r\n    </PostHeadInfoWrapper>\r\n  )\r\n}\r\n\r\nexport default PostHeadInfo\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport PostHeadInfo, { PostHeadInfoProps } from 'components/Post/PostHeadInfo'\r\n\r\ntype GatsbyImgProps = {\r\n  image: IGatsbyImageData\r\n  alt: string\r\n  className?: string\r\n}\r\n\r\nexport type PostHeadProps = PostHeadInfoProps & {\r\n  thumbnail: IGatsbyImageData\r\n}\r\n\r\nconst PostHeadWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 200px;\r\n\r\n  @media (max-width: 768px) {\r\n    height: 200px;\r\n  }\r\n`\r\n\r\nconst BackgroundImage = styled((props: GatsbyImgProps) => (\r\n  <GatsbyImage {...props} style={{ position: 'absolute' }} />\r\n))`\r\n  z-index: -1;\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  filter: opacity(0.25) brightness(0.75);\r\n\r\n  @media (max-width: 768px) {\r\n    height: 300px;\r\n  }\r\n`\r\n\r\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\r\n  title,\r\n  date,\r\n  categories,\r\n  thumbnail,\r\n}) {\r\n  return (\r\n    <PostHeadWrapper>\r\n      <BackgroundImage image={thumbnail} alt=\"thumbnail\" />\r\n      <PostHeadInfo title={title} date={date} categories={categories} />\r\n    </PostHeadWrapper>\r\n  )\r\n}\r\n\r\nexport default PostHead\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\ninterface PostContentProps {\r\n  html: string\r\n}\r\n\r\nconst MarkdownRenderer = styled.div`\r\n  // Renderer Style\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  padding: 40px 0;\r\n  word-break: break-all;\r\n\r\n  // Markdown Style\r\n  line-height: 1.8;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n\r\n  // Apply Padding Attribute to All Elements\r\n  p {\r\n    padding: 3px 0;\r\n  }\r\n\r\n  // Adjust Heading Element Style\r\n  h1,\r\n  h2,\r\n  h3 {\r\n    font-weight: 800;\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  * + h1,\r\n  * + h2,\r\n  * + h3 {\r\n    margin-top: 80px;\r\n  }\r\n\r\n  hr + h1,\r\n  hr + h2,\r\n  hr + h3 {\r\n    margin-top: 0;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 30px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 25px;\r\n  }\r\n\r\n  h3 {\r\n    font-size: 20px;\r\n  }\r\n\r\n  // Adjust Quotation Element Style\r\n  blockquote {\r\n    margin: 30px 0;\r\n    padding: 5px 15px;\r\n    border-left: 2px solid #000000;\r\n    font-weight: 800;\r\n  }\r\n\r\n  // Adjust List Element Style\r\n  ol,\r\n  ul {\r\n    margin-left: 20px;\r\n    padding: 30px 0;\r\n  }\r\n\r\n  // Adjust Horizontal Rule style\r\n  hr {\r\n    border: 1px solid #000000;\r\n    margin: 100px 0;\r\n  }\r\n\r\n  // Adjust Link Element Style\r\n  a {\r\n    color: #4263eb;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  // Adjust Code Style\r\n  pre[class*='language-'] {\r\n    margin: 30px 0;\r\n    padding: 15px;\r\n    font-size: 15px;\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      background: rgba(255, 255, 255, 0.5);\r\n      border-radius: 3px;\r\n    }\r\n  }\r\n\r\n  code[class*='language-'],\r\n  pre[class*='language-'] {\r\n    tab-size: 2;\r\n  }\r\n\r\n  // Markdown Responsive Design\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    padding: 80px 20px;\r\n    line-height: 1.6;\r\n    font-size: 14px;\r\n\r\n    h1 {\r\n      font-size: 23px;\r\n    }\r\n\r\n    h2 {\r\n      font-size: 20px;\r\n    }\r\n\r\n    h3 {\r\n      font-size: 17px;\r\n    }\r\n\r\n    img {\r\n      width: 100%;\r\n    }\r\n\r\n    hr {\r\n      margin: 50px 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\r\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\r\n}\r\n\r\nexport default PostContent\r\n","import styled from '@emotion/styled'\nimport React, { createRef, FunctionComponent, useEffect } from 'react'\n\nconst src = 'https://utteranc.es/client.js'\nconst repo = 'SolidCitadel/SolidCitadel.github.io' // 자신 계정의 레포지토리로 설정\n\ntype UtterancesAttributesType = {\n  src: string\n  repo: string\n  'issue-term': string\n  label: string\n  theme: string\n  crossorigin: string\n  async: string\n}\n\nconst UtterancesWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 20px;\n  }\n`\n\nconst CommentWidget: FunctionComponent = function () {\n  const element = createRef<HTMLDivElement>()\n\n  useEffect(() => {\n    if (element.current === null) return\n\n    const utterances: HTMLScriptElement = document.createElement('script')\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: `github-light`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    }\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n\n    element.current.appendChild(utterances)\n  }, [])\n\n  return <UtterancesWrapper ref={element} />\n}\n\nexport default CommentWidget\n","import { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\n\nconst RightSideWrapper = styled.aside`\n  width: 300px;\n  border-left: solid 1px #e2e2e2;\n\n  @media (max-width: 1368px) {\n    display: none;\n  }\n`\n\nconst HtmlRenderer = styled.div`\n  position: sticky;\n  top: 80px;\n  margin-bottom: auto;\n  li {\n    margin: 10px 0;\n  }\n  ul {\n    list-style: none;\n    margin-left: 5px;\n    padding-left: 10px;\n    border-left: solid 2px grey;\n  }\n  & > ul {\n    border-left: none;\n    margin-left: 0;\n  }\n`\n\ntype RightSideProps = {\n  html: string\n}\n\nconst RightSide: FunctionComponent<RightSideProps> = function ({ html }) {\n  return (\n    <RightSideWrapper>\n      <HtmlRenderer dangerouslySetInnerHTML={{ __html: html }} />\n    </RightSideWrapper>\n  )\n}\n\nexport default RightSide\n","import styled from '@emotion/styled'\r\nimport { FunctionComponent } from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nexport type LeftSideItemType = {\r\n  node: {\r\n    fields: {\r\n      slug: string\r\n      directory: string[]\r\n    }\r\n    frontmatter: {\r\n      title: string\r\n    }\r\n  }\r\n}\r\n\r\nconst Container = styled(Link)`\r\n  padding: 3px;\r\n  margin: 5px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst LeftSideItem: FunctionComponent<LeftSideItemType> = function ({\r\n  node: {\r\n    fields: { slug },\r\n    frontmatter: { title },\r\n  },\r\n}) {\r\n  return <Container to={slug}>{title}</Container>\r\n}\r\n\r\nexport default LeftSideItem\r\n","import { FunctionComponent, useRef, useState } from 'react'\nimport LeftSideItem, { LeftSideItemType } from './LeftSideItem'\nimport { LeftSideProps } from './LeftSide'\nimport { deepCopy } from 'deep-copy-ts'\nimport styled from '@emotion/styled'\nimport React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\ntype LeftSideFolderProps = {\n  name: string\n} & LeftSideProps\n\nconst FolderHead = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n  span {\n    font-size: 16px;\n  }\n  display: flex;\n  align-items: center;\n`\n\nconst Arrow = styled(GatsbyImage)`\n  width: 14px;\n  margin-right: 3px;\n`\n\nconst LeftSideFolder: FunctionComponent<LeftSideFolderProps> = function ({\n  name,\n  items,\n}) {\n  const folders: { [name: string]: LeftSideItemType[] } = {}\n  const posts: LeftSideItemType[] = []\n  items.forEach(item => {\n    const nItem = deepCopy(item)\n    const first = nItem.node.fields.directory.shift()\n    if (first)\n      folders[first] ? folders[first].push(nItem) : (folders[first] = [nItem])\n    else posts.push(nItem)\n  })\n\n  let key = 0\n  const ulRef = useRef<HTMLUListElement>(null)\n  const [state, setState] = useState(true)\n  const toggleFolder = () => {\n    if (ulRef.current) {\n      if (state) ulRef.current.style.display = 'none'\n      else ulRef.current.style.display = 'block'\n      setState(!state)\n    }\n  }\n\n  const {\n    downArrow: {\n      childImageSharp: { gatsbyImageData: downArrow },\n    },\n    rightArrow: {\n      childImageSharp: { gatsbyImageData: rightArrow },\n    },\n  } = useStaticQuery(graphql`\n    query {\n      rightArrow: file(name: { eq: \"right-arrow\" }) {\n        childImageSharp {\n          gatsbyImageData\n        }\n      }\n      downArrow: file(name: { eq: \"down-arrow\" }) {\n        childImageSharp {\n          gatsbyImageData\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      {name && (\n        <FolderHead onClick={toggleFolder}>\n          <Arrow image={state ? downArrow : rightArrow} alt={'404'} />\n          <span>{name}</span>\n        </FolderHead>\n      )}\n      <ul ref={ulRef}>\n        {Object.entries(folders).map(([name, items]) => (\n          <li key={key++}>\n            <LeftSideFolder name={name} items={items} />\n          </li>\n        ))}\n        {posts.map(({ node }: LeftSideItemType) => (\n          <li key={key++}>\n            <LeftSideItem node={node} />\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n}\n\nexport default LeftSideFolder\n","import styled from '@emotion/styled'\r\nimport { FunctionComponent } from 'react'\r\nimport { LeftSideItemType } from './LeftSideItem'\r\nimport LeftSideFolder from './LeftSideFolder'\r\nimport React from 'react'\r\n\r\nconst LeftSideWrapper = styled.aside`\r\n  width: 250px;\r\n  border-right: solid 1px #e2e2e2;\r\n\r\n  @media (max-width: 1368px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst LeftSideContainer = styled.div`\r\n  position: sticky;\r\n  top: 80px;\r\n  margin-bottom: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  li {\r\n    margin-left: 10px;\r\n  }\r\n  ul {\r\n    list-style: none;\r\n  }\r\n`\r\n\r\nexport type LeftSideProps = {\r\n  items: LeftSideItemType[]\r\n}\r\n\r\nconst LeftSide: FunctionComponent<LeftSideProps> = function ({ items }) {\r\n  return (\r\n    <LeftSideWrapper>\r\n      <LeftSideContainer>\r\n        <LeftSideFolder name=\"\" items={items} />\r\n      </LeftSideContainer>\r\n    </LeftSideWrapper>\r\n  )\r\n}\r\n\r\nexport default React.memo(LeftSide)\r\n","import React, { FunctionComponent } from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { PostFrontmatterType } from 'types/PostItem.types'\r\nimport Template from 'components/Common/Template'\r\nimport PostHead, { PostHeadProps } from 'components/Post/PostHead'\r\nimport PostContent from 'components/Post/PostContent'\r\nimport CommentWidget from 'components/Post/CommentWidget'\r\nimport styled from '@emotion/styled'\r\nimport RightSide from 'components/Post/RightSide'\r\nimport LeftSide from 'components/Post/LeftSide'\r\nimport { LeftSideItemType } from 'components/Post/LeftSideItem'\r\n\r\nexport type PostPageItemType = {\r\n  node: {\r\n    html: string\r\n    frontmatter: PostFrontmatterType\r\n    tableOfContents: string\r\n  }\r\n}\r\n\r\ntype PostTemplateProps = {\r\n  data: {\r\n    slugMarkdownRemark: {\r\n      edges: PostPageItemType[]\r\n    }\r\n    allMarkdownRemark: {\r\n      edges: LeftSideItemType[]\r\n    }\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: 1368px) {\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\nconst Center = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\r\n  data: {\r\n    slugMarkdownRemark: { edges: sedges },\r\n    allMarkdownRemark: { edges },\r\n  },\r\n}) {\r\n  const {\r\n    node: { html, frontmatter, tableOfContents },\r\n  } = sedges[0]\r\n  const postHeadProps: PostHeadProps = {\r\n    title: frontmatter.title,\r\n    date: frontmatter.date,\r\n    categories: frontmatter.categories,\r\n    thumbnail: frontmatter.thumbnail.childImageSharp.gatsbyImageData,\r\n  }\r\n\r\n  return (\r\n    <Template>\r\n      <Container>\r\n        <LeftSide items={edges} />\r\n        <Center>\r\n          <PostHead {...postHeadProps} />\r\n          <PostContent html={html} />\r\n          <CommentWidget />\r\n        </Center>\r\n        <RightSide html={tableOfContents} />\r\n      </Container>\r\n    </Template>\r\n  )\r\n}\r\n\r\nexport default PostTemplate\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n  query queryMarkdownDataBySlug($slug: String) {\r\n    slugMarkdownRemark: allMarkdownRemark(\r\n      filter: { fields: { slug: { eq: $slug } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          html\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData\r\n              }\r\n            }\r\n          }\r\n          tableOfContents\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n            directory\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["Object","defineProperty","exports","value","cloneArrayBuffer","arrayBuffer","result","ArrayBuffer","byteLength","Uint8Array","set","cloneDataView","cloneArrayBuffer_1","dataView","buffer","DataView","byteOffset","cloneDate","targetDate","Date","getTime","cloneMap","deepCopy_1","targetMap","map","Map","forEach","key","deepCopy","cloneRegExp","targetRegexp","RegExp","source","flags","lastIndex","cloneTypedArray","TypedArrayMap","Float32Array","Float64Array","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Uint8ClampedArray","typedArray","BigInt64Array","BigUint64Array","e","prototype","toString","call","length","__assign","this","assign","t","s","i","n","arguments","p","hasOwnProperty","apply","cloneDataView_1","cloneDate_1","cloneMap_1","cloneRegexp_1","cloneTypedArray_1","target","tag","Array","cp_1","v","push","cp_2","keys","k","enumerable","get","PostHeadInfoWrapper","Title","PostData","title","date","categories","___EmotionJSX","join","PostHeadWrapper","BackgroundImage","props","GatsbyImage","style","position","process","thumbnail","image","alt","PostHeadInfo","MarkdownRenderer","html","dangerouslySetInnerHTML","__html","UtterancesWrapper","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","entries","setAttribute","appendChild","ref","RightSideWrapper","HtmlRenderer","Container","Link","node","slug","fields","frontmatter","to","FolderHead","Arrow","LeftSideFolder","name","items","folders","posts","item","nItem","first","directory","shift","ulRef","useRef","useState","state","setState","useStaticQuery","downArrow","childImageSharp","gatsbyImageData","rightArrow","onClick","display","LeftSideItem","LeftSideWrapper","LeftSideContainer","LeftSide","React","Center","data","sedges","slugMarkdownRemark","edges","allMarkdownRemark","tableOfContents","postHeadProps","Template","PostHead","PostContent","CommentWidget","RightSide"],"sourceRoot":""}